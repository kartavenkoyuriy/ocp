package chapter8.workingWithStreams.serializing;

import java.io.Serializable;

//why not do all classes serializable?
//there are some heavy classes(Thread, Stream)
//that we don't want to instruct JVM to serialize it
public class Animal implements Serializable {
    //static members will not be serializable, because the state of object is serializing(not class)
    //
    //it is recommended to create/update serialVersionUID manually
    //because autogenerated mechanisms may vary on different JDK(different ID)
    private static final long serialVersionUID = 1L;
    //'transient' modifier tells that this field should. data will be lost.
    private String name;
    private int age;
    private char type;

    public Animal(String name, int age, char type) {
        this.name = name;
        this.age = age;
        this.type = type;
    }

    public String getName() {
        return name;
    }

    public int getAge() {
        return age;
    }

    public char getType() {
        return type;
    }

    @Override
    public String toString() {
        return "Animal{" +
                "name='" + name + '\'' +
                ", age=" + age +
                ", type=" + type +
                '}';
    }
}
